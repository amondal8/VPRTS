-- MySQL dump 10.13  Distrib 8.0.34, for macos13 (x86_64)
--
-- Host: localhost    Database: definitional_data
-- ------------------------------------------------------
-- Server version	8.2.0

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `addresource_tcexecution`
--

DROP TABLE IF EXISTS `addresource_tcexecution`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `addresource_tcexecution` (
  `resource_id` int NOT NULL,
  `resource_desc` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`resource_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `addresource_tcexecution`
--

LOCK TABLES `addresource_tcexecution` WRITE;
/*!40000 ALTER TABLE `addresource_tcexecution` DISABLE KEYS */;
/*!40000 ALTER TABLE `addresource_tcexecution` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `code_module`
--

DROP TABLE IF EXISTS `code_module`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `code_module` (
  `cm_id` varchar(10) NOT NULL,
  `cm_desc` varchar(500) DEFAULT NULL,
  PRIMARY KEY (`cm_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `code_module`
--

LOCK TABLES `code_module` WRITE;
/*!40000 ALTER TABLE `code_module` DISABLE KEYS */;
INSERT INTO `code_module` VALUES ('CM1','nan'),('CM10','nan'),('CM100','nan'),('CM101','nan'),('CM102','nan'),('CM103','nan'),('CM104','nan'),('CM105','nan'),('CM106','nan'),('CM107','nan'),('CM108','nan'),('CM109','nan'),('CM11','nan'),('CM110','nan'),('CM12','nan'),('CM13','nan'),('CM14','nan'),('CM15','nan'),('CM16','nan'),('CM17','nan'),('CM18','nan'),('CM19','nan'),('CM2','nan'),('CM20','nan'),('CM21','nan'),('CM22','nan'),('CM23','nan'),('CM24','nan'),('CM25','nan'),('CM26','nan'),('CM27','nan'),('CM28','nan'),('CM29','nan'),('CM3','nan'),('CM30','nan'),('CM31','nan'),('CM32','nan'),('CM33','nan'),('CM34','nan'),('CM35','nan'),('CM36','nan'),('CM37','nan'),('CM38','nan'),('CM39','nan'),('CM4','nan'),('CM40','nan'),('CM41','nan'),('CM42','nan'),('CM43','nan'),('CM44','nan'),('CM45','nan'),('CM46','nan'),('CM47','nan'),('CM48','nan'),('CM49','nan'),('CM5','nan'),('CM50','nan'),('CM51','nan'),('CM52','nan'),('CM53','nan'),('CM54','nan'),('CM55','nan'),('CM56','nan'),('CM57','nan'),('CM58','nan'),('CM59','nan'),('CM6','nan'),('CM60','nan'),('CM61','nan'),('CM62','nan'),('CM63','nan'),('CM64','nan'),('CM65','nan'),('CM66','nan'),('CM67','nan'),('CM68','nan'),('CM69','nan'),('CM7','nan'),('CM70','nan'),('CM71','nan'),('CM72','nan'),('CM73','nan'),('CM74','nan'),('CM75','nan'),('CM76','nan'),('CM77','nan'),('CM78','nan'),('CM79','nan'),('CM8','nan'),('CM80','nan'),('CM81','nan'),('CM82','nan'),('CM83','nan'),('CM84','nan'),('CM85','nan'),('CM86','nan'),('CM87','nan'),('CM88','nan'),('CM89','nan'),('CM9','nan'),('CM90','nan'),('CM91','nan'),('CM92','nan'),('CM93','nan'),('CM94','nan'),('CM95','nan'),('CM96','nan'),('CM97','nan'),('CM98','nan'),('CM99','nan');
/*!40000 ALTER TABLE `code_module` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `defect`
--

DROP TABLE IF EXISTS `defect`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `defect` (
  `defect_id` varchar(10) NOT NULL,
  `defect_desc` varchar(500) DEFAULT NULL,
  `affected_version` varchar(50) DEFAULT NULL,
  `steps_to_reproduce` varchar(1000) DEFAULT NULL,
  `expected_result` varchar(500) DEFAULT NULL,
  `environment` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`defect_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `defect`
--

LOCK TABLES `defect` WRITE;
/*!40000 ALTER TABLE `defect` DISABLE KEYS */;
INSERT INTO `defect` VALUES ('D1',NULL,NULL,NULL,NULL,NULL),('D10',NULL,NULL,NULL,NULL,NULL),('D100',NULL,NULL,NULL,NULL,NULL),('D101',NULL,NULL,NULL,NULL,NULL),('D102',NULL,NULL,NULL,NULL,NULL),('D103',NULL,NULL,NULL,NULL,NULL),('D104',NULL,NULL,NULL,NULL,NULL),('D105',NULL,NULL,NULL,NULL,NULL),('D106',NULL,NULL,NULL,NULL,NULL),('D107',NULL,NULL,NULL,NULL,NULL),('D108',NULL,NULL,NULL,NULL,NULL),('D109',NULL,NULL,NULL,NULL,NULL),('D11',NULL,NULL,NULL,NULL,NULL),('D110',NULL,NULL,NULL,NULL,NULL),('D111',NULL,NULL,NULL,NULL,NULL),('D112',NULL,NULL,NULL,NULL,NULL),('D113',NULL,NULL,NULL,NULL,NULL),('D114',NULL,NULL,NULL,NULL,NULL),('D115',NULL,NULL,NULL,NULL,NULL),('D116',NULL,NULL,NULL,NULL,NULL),('D117',NULL,NULL,NULL,NULL,NULL),('D118',NULL,NULL,NULL,NULL,NULL),('D119',NULL,NULL,NULL,NULL,NULL),('D12',NULL,NULL,NULL,NULL,NULL),('D120',NULL,NULL,NULL,NULL,NULL),('D121',NULL,NULL,NULL,NULL,NULL),('D122',NULL,NULL,NULL,NULL,NULL),('D123',NULL,NULL,NULL,NULL,NULL),('D124',NULL,NULL,NULL,NULL,NULL),('D125',NULL,NULL,NULL,NULL,NULL),('D126',NULL,NULL,NULL,NULL,NULL),('D127',NULL,NULL,NULL,NULL,NULL),('D128',NULL,NULL,NULL,NULL,NULL),('D129',NULL,NULL,NULL,NULL,NULL),('D13',NULL,NULL,NULL,NULL,NULL),('D130',NULL,NULL,NULL,NULL,NULL),('D131',NULL,NULL,NULL,NULL,NULL),('D132',NULL,NULL,NULL,NULL,NULL),('D133',NULL,NULL,NULL,NULL,NULL),('D134',NULL,NULL,NULL,NULL,NULL),('D135',NULL,NULL,NULL,NULL,NULL),('D136',NULL,NULL,NULL,NULL,NULL),('D137',NULL,NULL,NULL,NULL,NULL),('D138',NULL,NULL,NULL,NULL,NULL),('D139',NULL,NULL,NULL,NULL,NULL),('D14',NULL,NULL,NULL,NULL,NULL),('D140',NULL,NULL,NULL,NULL,NULL),('D141',NULL,NULL,NULL,NULL,NULL),('D142',NULL,NULL,NULL,NULL,NULL),('D143',NULL,NULL,NULL,NULL,NULL),('D144',NULL,NULL,NULL,NULL,NULL),('D145',NULL,NULL,NULL,NULL,NULL),('D146',NULL,NULL,NULL,NULL,NULL),('D147',NULL,NULL,NULL,NULL,NULL),('D148',NULL,NULL,NULL,NULL,NULL),('D149',NULL,NULL,NULL,NULL,NULL),('D15',NULL,NULL,NULL,NULL,NULL),('D150',NULL,NULL,NULL,NULL,NULL),('D151',NULL,NULL,NULL,NULL,NULL),('D152',NULL,NULL,NULL,NULL,NULL),('D153',NULL,NULL,NULL,NULL,NULL),('D154',NULL,NULL,NULL,NULL,NULL),('D155',NULL,NULL,NULL,NULL,NULL),('D156',NULL,NULL,NULL,NULL,NULL),('D157',NULL,NULL,NULL,NULL,NULL),('D158',NULL,NULL,NULL,NULL,NULL),('D159',NULL,NULL,NULL,NULL,NULL),('D16',NULL,NULL,NULL,NULL,NULL),('D160',NULL,NULL,NULL,NULL,NULL),('D161',NULL,NULL,NULL,NULL,NULL),('D162',NULL,NULL,NULL,NULL,NULL),('D163',NULL,NULL,NULL,NULL,NULL),('D164',NULL,NULL,NULL,NULL,NULL),('D165',NULL,NULL,NULL,NULL,NULL),('D166',NULL,NULL,NULL,NULL,NULL),('D167',NULL,NULL,NULL,NULL,NULL),('D168',NULL,NULL,NULL,NULL,NULL),('D169',NULL,NULL,NULL,NULL,NULL),('D17',NULL,NULL,NULL,NULL,NULL),('D170',NULL,NULL,NULL,NULL,NULL),('D171',NULL,NULL,NULL,NULL,NULL),('D172',NULL,NULL,NULL,NULL,NULL),('D173',NULL,NULL,NULL,NULL,NULL),('D174',NULL,NULL,NULL,NULL,NULL),('D175',NULL,NULL,NULL,NULL,NULL),('D176',NULL,NULL,NULL,NULL,NULL),('D177',NULL,NULL,NULL,NULL,NULL),('D178',NULL,NULL,NULL,NULL,NULL),('D179',NULL,NULL,NULL,NULL,NULL),('D18',NULL,NULL,NULL,NULL,NULL),('D180',NULL,NULL,NULL,NULL,NULL),('D181',NULL,NULL,NULL,NULL,NULL),('D182',NULL,NULL,NULL,NULL,NULL),('D183',NULL,NULL,NULL,NULL,NULL),('D184',NULL,NULL,NULL,NULL,NULL),('D185',NULL,NULL,NULL,NULL,NULL),('D186',NULL,NULL,NULL,NULL,NULL),('D187',NULL,NULL,NULL,NULL,NULL),('D188',NULL,NULL,NULL,NULL,NULL),('D189',NULL,NULL,NULL,NULL,NULL),('D19',NULL,NULL,NULL,NULL,NULL),('D190',NULL,NULL,NULL,NULL,NULL),('D2',NULL,NULL,NULL,NULL,NULL),('D20',NULL,NULL,NULL,NULL,NULL),('D21',NULL,NULL,NULL,NULL,NULL),('D22',NULL,NULL,NULL,NULL,NULL),('D23',NULL,NULL,NULL,NULL,NULL),('D24',NULL,NULL,NULL,NULL,NULL),('D25',NULL,NULL,NULL,NULL,NULL),('D26',NULL,NULL,NULL,NULL,NULL),('D27',NULL,NULL,NULL,NULL,NULL),('D28',NULL,NULL,NULL,NULL,NULL),('D29',NULL,NULL,NULL,NULL,NULL),('D3',NULL,NULL,NULL,NULL,NULL),('D30',NULL,NULL,NULL,NULL,NULL),('D31',NULL,NULL,NULL,NULL,NULL),('D32',NULL,NULL,NULL,NULL,NULL),('D33',NULL,NULL,NULL,NULL,NULL),('D34',NULL,NULL,NULL,NULL,NULL),('D35',NULL,NULL,NULL,NULL,NULL),('D36',NULL,NULL,NULL,NULL,NULL),('D37',NULL,NULL,NULL,NULL,NULL),('D38',NULL,NULL,NULL,NULL,NULL),('D39',NULL,NULL,NULL,NULL,NULL),('D4',NULL,NULL,NULL,NULL,NULL),('D40',NULL,NULL,NULL,NULL,NULL),('D41',NULL,NULL,NULL,NULL,NULL),('D42',NULL,NULL,NULL,NULL,NULL),('D43',NULL,NULL,NULL,NULL,NULL),('D44',NULL,NULL,NULL,NULL,NULL),('D45',NULL,NULL,NULL,NULL,NULL),('D46',NULL,NULL,NULL,NULL,NULL),('D47',NULL,NULL,NULL,NULL,NULL),('D48',NULL,NULL,NULL,NULL,NULL),('D49',NULL,NULL,NULL,NULL,NULL),('D5',NULL,NULL,NULL,NULL,NULL),('D50',NULL,NULL,NULL,NULL,NULL),('D51',NULL,NULL,NULL,NULL,NULL),('D52',NULL,NULL,NULL,NULL,NULL),('D53',NULL,NULL,NULL,NULL,NULL),('D54',NULL,NULL,NULL,NULL,NULL),('D55',NULL,NULL,NULL,NULL,NULL),('D56',NULL,NULL,NULL,NULL,NULL),('D57',NULL,NULL,NULL,NULL,NULL),('D58',NULL,NULL,NULL,NULL,NULL),('D59',NULL,NULL,NULL,NULL,NULL),('D6',NULL,NULL,NULL,NULL,NULL),('D60',NULL,NULL,NULL,NULL,NULL),('D61',NULL,NULL,NULL,NULL,NULL),('D62',NULL,NULL,NULL,NULL,NULL),('D63',NULL,NULL,NULL,NULL,NULL),('D64',NULL,NULL,NULL,NULL,NULL),('D65',NULL,NULL,NULL,NULL,NULL),('D66',NULL,NULL,NULL,NULL,NULL),('D67',NULL,NULL,NULL,NULL,NULL),('D68',NULL,NULL,NULL,NULL,NULL),('D69',NULL,NULL,NULL,NULL,NULL),('D7',NULL,NULL,NULL,NULL,NULL),('D70',NULL,NULL,NULL,NULL,NULL),('D71',NULL,NULL,NULL,NULL,NULL),('D72',NULL,NULL,NULL,NULL,NULL),('D73',NULL,NULL,NULL,NULL,NULL),('D74',NULL,NULL,NULL,NULL,NULL),('D75',NULL,NULL,NULL,NULL,NULL),('D76',NULL,NULL,NULL,NULL,NULL),('D77',NULL,NULL,NULL,NULL,NULL),('D78',NULL,NULL,NULL,NULL,NULL),('D79',NULL,NULL,NULL,NULL,NULL),('D8',NULL,NULL,NULL,NULL,NULL),('D80',NULL,NULL,NULL,NULL,NULL),('D81',NULL,NULL,NULL,NULL,NULL),('D82',NULL,NULL,NULL,NULL,NULL),('D83',NULL,NULL,NULL,NULL,NULL),('D84',NULL,NULL,NULL,NULL,NULL),('D85',NULL,NULL,NULL,NULL,NULL),('D86',NULL,NULL,NULL,NULL,NULL),('D87',NULL,NULL,NULL,NULL,NULL),('D88',NULL,NULL,NULL,NULL,NULL),('D89',NULL,NULL,NULL,NULL,NULL),('D9',NULL,NULL,NULL,NULL,NULL),('D90',NULL,NULL,NULL,NULL,NULL),('D91',NULL,NULL,NULL,NULL,NULL),('D92',NULL,NULL,NULL,NULL,NULL),('D93',NULL,NULL,NULL,NULL,NULL),('D94',NULL,NULL,NULL,NULL,NULL),('D95',NULL,NULL,NULL,NULL,NULL),('D96',NULL,NULL,NULL,NULL,NULL),('D97',NULL,NULL,NULL,NULL,NULL),('D98',NULL,NULL,NULL,NULL,NULL),('D99',NULL,NULL,NULL,NULL,NULL);
/*!40000 ALTER TABLE `defect` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `defect_complexity`
--

DROP TABLE IF EXISTS `defect_complexity`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `defect_complexity` (
  `defect_complexity_id` int NOT NULL,
  `defect_complexity_desc` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`defect_complexity_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `defect_complexity`
--

LOCK TABLES `defect_complexity` WRITE;
/*!40000 ALTER TABLE `defect_complexity` DISABLE KEYS */;
INSERT INTO `defect_complexity` VALUES (1,'Low'),(2,'Medium'),(3,'High'),(4,'Very High');
/*!40000 ALTER TABLE `defect_complexity` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `defect_priority`
--

DROP TABLE IF EXISTS `defect_priority`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `defect_priority` (
  `defect_priority_id` int NOT NULL,
  `defect_priority_desc` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`defect_priority_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `defect_priority`
--

LOCK TABLES `defect_priority` WRITE;
/*!40000 ALTER TABLE `defect_priority` DISABLE KEYS */;
INSERT INTO `defect_priority` VALUES (1,'Low'),(2,'Medium'),(3,'High'),(4,'Critical');
/*!40000 ALTER TABLE `defect_priority` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `defect_severity`
--

DROP TABLE IF EXISTS `defect_severity`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `defect_severity` (
  `defect_severity_id` int NOT NULL,
  `defect_severity_desc` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`defect_severity_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `defect_severity`
--

LOCK TABLES `defect_severity` WRITE;
/*!40000 ALTER TABLE `defect_severity` DISABLE KEYS */;
INSERT INTO `defect_severity` VALUES (1,'Cosmetic'),(2,'Minor'),(3,'Major'),(4,'Critical');
/*!40000 ALTER TABLE `defect_severity` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `release_data`
--

DROP TABLE IF EXISTS `release_data`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `release_data` (
  `release_id` int NOT NULL,
  `start_date` date DEFAULT NULL,
  `end_date` date DEFAULT NULL,
  PRIMARY KEY (`release_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `release_data`
--

LOCK TABLES `release_data` WRITE;
/*!40000 ALTER TABLE `release_data` DISABLE KEYS */;
INSERT INTO `release_data` VALUES (1,NULL,NULL),(2,NULL,NULL);
/*!40000 ALTER TABLE `release_data` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sprint_data`
--

DROP TABLE IF EXISTS `sprint_data`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sprint_data` (
  `sprint_id` int NOT NULL,
  `start_date` date DEFAULT NULL,
  `end_date` date DEFAULT NULL,
  PRIMARY KEY (`sprint_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sprint_data`
--

LOCK TABLES `sprint_data` WRITE;
/*!40000 ALTER TABLE `sprint_data` DISABLE KEYS */;
INSERT INTO `sprint_data` VALUES (1,NULL,NULL),(2,NULL,NULL),(3,NULL,NULL),(4,NULL,NULL),(5,NULL,NULL),(6,NULL,NULL),(7,NULL,NULL),(8,NULL,NULL),(9,NULL,NULL),(10,NULL,NULL);
/*!40000 ALTER TABLE `sprint_data` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tc_executionhistory`
--

DROP TABLE IF EXISTS `tc_executionhistory`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `tc_executionhistory` (
  `execution_date` date DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tc_executionhistory`
--

LOCK TABLES `tc_executionhistory` WRITE;
/*!40000 ALTER TABLE `tc_executionhistory` DISABLE KEYS */;
/*!40000 ALTER TABLE `tc_executionhistory` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tc_runstatus`
--

DROP TABLE IF EXISTS `tc_runstatus`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `tc_runstatus` (
  `status_id` int NOT NULL,
  `status_desc` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`status_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tc_runstatus`
--

LOCK TABLES `tc_runstatus` WRITE;
/*!40000 ALTER TABLE `tc_runstatus` DISABLE KEYS */;
INSERT INTO `tc_runstatus` VALUES (1,'Passed'),(2,'Failed'),(3,'Not Run'),(4,'Deferred'),(5,'Skipped'),(6,'Blocked'),(7,'Not Applicable');
/*!40000 ALTER TABLE `tc_runstatus` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tcexectime`
--

DROP TABLE IF EXISTS `tcexectime`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `tcexectime` (
  `tc_executiontime` int DEFAULT '0',
  `tc_setup` int DEFAULT '0',
  `tc_teardown` int DEFAULT '0',
  `tc_additionalres` int DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tcexectime`
--

LOCK TABLES `tcexectime` WRITE;
/*!40000 ALTER TABLE `tcexectime` DISABLE KEYS */;
INSERT INTO `tcexectime` VALUES (57,4,4,14),(43,17,9,6),(28,15,8,12),(29,6,9,15),(51,3,4,8),(46,7,5,14),(57,11,2,11),(53,10,6,19),(28,18,1,24),(41,16,4,21),(60,15,2,5),(18,9,3,24),(5,11,2,23),(52,14,1,24),(8,10,6,28),(50,17,5,29),(21,12,3,22),(60,8,3,7),(51,2,7,9),(15,16,5,24),(33,17,3,9),(18,8,5,27),(34,16,6,9),(59,8,9,27),(59,15,2,25),(31,18,2,24),(41,1,10,21),(40,10,7,16),(12,20,9,15),(57,15,9,9),(39,18,4,27),(33,13,10,30),(29,6,7,27),(46,17,5,22),(24,6,5,17),(45,16,2,5),(7,5,8,26),(10,20,6,28),(47,7,7,10),(21,18,10,30),(56,2,4,10),(8,17,9,19),(12,3,9,13),(11,11,5,9),(27,7,1,16),(25,15,10,13),(11,20,2,17),(10,3,10,20),(15,7,2,14),(31,9,2,23),(17,13,8,11),(25,8,7,25),(7,7,7,6),(47,14,7,13),(53,20,9,14),(57,10,2,8),(41,3,5,21),(59,19,5,5),(17,17,8,23),(15,20,7,17),(55,3,1,29),(56,5,5,29),(35,4,6,30),(57,12,7,16),(49,7,4,15),(28,4,1,10),(5,11,6,23),(10,16,5,14),(46,3,2,11),(8,3,7,24),(60,18,8,10),(37,18,9,29),(34,9,2,7),(55,6,8,17),(32,18,8,13),(52,14,4,30),(36,12,6,5),(32,7,9,8),(17,11,7,20),(44,6,5,15),(30,7,8,28),(37,3,8,19),(20,16,2,23),(18,16,3,25),(59,18,1,6),(49,6,5,12),(19,12,9,20),(39,8,5,27),(11,18,7,24),(11,19,9,12),(14,8,4,18),(46,9,2,22),(9,5,4,28),(50,15,3,9),(43,8,4,21),(30,11,4,24),(34,12,4,11),(43,14,5,20),(60,18,5,15),(52,12,5,29),(32,4,3,9),(24,16,10,14),(45,14,8,24),(17,9,3,29),(52,4,5,17),(8,15,8,28),(47,1,10,18),(28,6,3,26),(33,13,9,9),(45,4,10,9),(17,11,6,25),(43,17,4,17),(9,18,9,20),(16,1,5,17),(7,13,2,13),(47,14,5,6),(42,4,3,25),(22,13,1,8),(12,8,5,20),(47,12,10,20),(52,19,9,23),(58,7,10,7),(6,20,4,12),(19,10,5,6),(51,3,1,30),(11,11,4,18),(49,1,5,22),(19,16,2,16),(27,14,1,27),(53,18,5,29),(51,1,6,13),(50,12,4,12),(41,6,4,18),(12,4,9,30),(45,8,7,28),(40,11,9,10),(25,12,3,22),(52,15,8,16),(10,9,6,18),(58,18,10,23),(42,20,10,10),(8,13,9,23),(40,12,2,6),(13,15,5,7),(38,1,10,15),(20,8,10,27),(60,15,7,16),(46,1,6,7),(48,13,7,7),(50,11,7,30),(57,5,10,14),(35,9,5,9),(24,1,2,15),(29,9,9,18),(8,1,4,7),(48,16,2,30),(26,19,5,5),(31,2,6,9),(35,19,8,12),(16,9,4,20),(7,13,7,23),(48,5,1,24),(25,13,6,17),(5,8,8,29),(14,10,3,9),(51,14,2,20),(27,17,10,29),(7,20,2,20),(18,6,6,29),(12,19,5,12),(60,13,5,18),(27,4,10,28),(30,11,10,23),(52,13,8,13),(11,1,2,13),(55,5,3,19),(19,9,2,24),(46,16,7,14),(25,8,3,9),(17,17,7,16),(46,9,5,6),(25,3,9,18),(6,2,4,11),(40,8,1,22),(29,11,1,10),(29,17,10,24),(24,4,2,5),(34,12,2,10),(7,6,5,22),(19,20,4,7),(30,16,8,21),(54,9,3,21),(27,15,8,30),(17,13,9,22),(53,13,4,22),(8,13,2,29),(26,12,5,18),(10,11,8,25),(53,3,10,23),(9,3,1,18),(27,11,3,27),(16,17,5,7),(53,3,9,25),(33,5,10,5),(44,12,6,21),(14,19,6,18),(49,6,9,10),(46,15,6,17),(18,1,6,8),(53,19,4,11),(54,10,7,13),(37,1,10,26),(10,11,6,8),(16,6,3,21),(30,1,10,21),(10,5,3,28),(13,8,1,16),(53,2,3,29),(23,15,7,21),(14,4,7,27),(59,20,8,15),(5,19,7,9),(8,20,4,12),(23,13,2,22),(56,12,6,8),(56,5,2,7),(48,12,7,29),(15,7,9,14),(47,12,8,6),(22,13,4,28),(47,7,4,14),(20,7,3,19),(8,4,10,8),(23,13,10,13),(48,9,10,21),(34,12,1,9),(49,20,8,19),(33,19,8,8),(49,4,1,15),(12,16,2,12),(24,14,1,6),(45,10,7,24),(42,17,9,21),(47,11,1,24),(9,1,6,11),(26,17,9,18),(40,2,1,17),(38,18,5,22),(53,13,3,15),(29,20,10,17),(18,15,10,17),(29,14,2,11),(45,4,2,8),(22,12,10,21),(27,2,10,15),(40,5,7,19),(57,4,4,10),(46,1,8,5),(20,16,4,17),(52,20,7,15),(50,18,3,5),(13,12,10,17),(52,7,5,24),(59,6,3,10),(58,3,6,27),(31,13,9,18),(40,16,4,18),(6,4,7,5),(24,17,3,11),(10,18,7,12),(40,20,7,11),(24,15,9,24),(56,16,9,21),(9,16,1,20),(9,20,4,26),(58,16,5,20),(33,7,1,25),(9,11,2,27),(42,18,2,25),(54,1,8,26),(45,18,8,18),(18,14,6,16),(9,4,6,29),(53,1,5,10),(18,11,4,8),(28,8,4,27),(30,19,5,27),(22,20,8,13),(59,2,2,14),(45,14,5,27),(16,16,9,28),(44,5,4,10),(30,15,8,18),(49,18,9,26),(34,3,9,18),(57,6,9,16),(23,11,3,20),(47,4,2,12),(21,15,2,21),(58,18,4,23),(10,8,2,8),(28,3,8,22),(32,6,8,17),(49,18,2,20),(44,14,1,12),(60,12,7,17),(32,17,6,25),(36,20,8,22),(10,7,1,20),(25,14,6,22),(49,6,10,27),(36,8,7,8),(54,14,9,12),(33,7,7,26),(58,12,2,7),(16,8,1,26),(25,10,8,29),(9,14,6,9),(53,14,3,29),(43,2,10,6),(11,20,9,29),(18,10,10,14),(43,19,6,5),(15,10,7,6),(33,2,10,21),(47,17,1,5),(55,4,2,17),(39,19,6,22),(31,16,2,7),(49,5,5,16),(43,2,2,24),(60,10,6,20),(43,5,5,29),(54,3,10,25),(7,11,9,9),(46,10,10,30),(16,1,5,13),(42,6,10,8),(51,12,3,11),(28,3,9,18),(47,14,8,26),(59,8,3,25),(50,1,7,11),(18,1,1,25),(38,1,1,5),(27,4,1,26),(50,12,3,27),(29,13,10,12),(13,4,10,29),(41,8,6,24),(10,13,1,12),(37,9,3,13),(60,9,7,29),(42,19,3,24),(53,8,3,29),(52,8,7,22),(21,17,7,6),(13,2,7,10),(30,11,3,8),(17,19,3,24),(27,8,1,15),(49,11,9,21),(14,6,5,27),(37,2,3,18),(32,2,2,26),(21,18,9,22),(14,9,7,17),(56,5,3,13),(46,17,9,20),(38,2,2,25),(23,17,9,5),(43,15,4,5),(60,10,3,21),(56,3,5,11),(41,2,6,18),(36,6,3,23),(20,20,6,14),(56,7,9,12),(21,12,6,23),(18,10,2,21),(40,11,9,13),(51,13,10,22),(47,6,9,8),(5,20,2,5),(60,7,7,21),(13,17,9,17),(14,11,6,23),(13,13,2,13),(34,10,6,18),(18,5,8,19),(44,1,5,29),(27,9,10,21),(34,3,6,28),(18,4,4,9),(40,8,7,8),(53,4,6,15),(13,15,7,7),(49,18,10,27),(29,15,2,17),(22,4,4,11),(47,13,6,24),(55,20,8,29),(12,14,1,11),(35,16,6,21),(21,17,10,22),(13,18,1,28),(44,6,6,20),(41,9,7,22),(51,12,6,14),(50,3,6,5),(52,18,6,9),(36,13,5,26),(18,3,8,16),(32,16,7,16),(51,9,5,17),(28,15,4,21),(48,5,1,14),(11,9,10,9),(50,8,2,7),(56,8,6,10),(9,13,8,21),(41,9,9,14),(41,1,9,18),(52,15,6,16),(55,12,5,7),(22,2,2,7),(33,17,1,14),(55,13,8,14),(27,14,3,29),(49,13,5,10),(26,14,9,16),(27,15,5,8),(34,3,2,30),(41,13,10,14),(27,4,2,22),(39,6,7,28),(19,2,8,20),(25,11,6,26),(20,14,9,25),(45,3,4,29),(13,13,5,25),(34,11,5,14),(14,14,6,27),(5,7,7,23),(5,19,8,15),(57,15,10,8),(37,17,1,17),(9,4,7,6),(24,14,3,19),(8,5,1,17),(43,9,5,17),(39,13,8,27),(28,18,7,28),(37,17,7,20),(24,15,4,11),(48,15,10,7),(56,8,10,7),(53,15,2,26),(49,3,10,13),(42,13,10,5),(60,13,3,25),(9,17,8,20),(47,2,1,15),(41,16,8,12),(53,1,1,29),(54,10,9,20),(34,15,1,28),(34,19,2,14),(19,18,7,9),(26,12,10,14),(35,8,8,15),(31,16,2,21),(44,4,3,15),(48,11,9,10),(33,13,8,27),(34,10,4,23),(31,9,4,15),(25,8,3,20),(35,20,10,14),(6,10,8,8),(35,1,7,13),(40,14,4,22),(12,19,10,17),(54,6,2,20),(17,11,9,11),(36,3,7,18),(42,4,9,15),(17,14,6,24),(17,5,6,14),(60,8,7,10),(49,2,5,30),(30,9,10,7),(39,15,5,15),(54,9,8,14),(34,20,1,23),(11,17,8,18),(27,3,3,7),(8,2,7,27),(37,19,7,9),(60,1,8,12),(47,15,7,22),(54,2,9,17),(45,15,3,19),(52,10,9,23),(34,5,5,23),(8,19,3,5),(41,11,1,7),(42,7,6,26),(48,10,3,24),(27,2,9,28),(17,1,1,27),(28,7,9,29),(52,12,5,24),(20,5,4,26),(26,8,9,23),(53,15,7,29),(11,11,6,30),(33,13,6,30),(25,6,6,30),(43,18,5,9),(49,7,10,8),(21,19,1,12),(17,20,2,27),(40,17,5,12),(40,6,3,10),(47,8,3,23),(9,10,4,22),(10,7,8,17),(46,8,9,25),(38,3,8,10),(6,9,7,10),(45,2,4,12),(19,16,9,24),(41,18,6,21),(13,2,8,11),(51,16,6,29),(44,2,5,24),(60,19,9,10),(21,3,1,21),(6,1,4,13),(19,9,6,23),(20,14,1,23),(36,18,8,26),(36,1,9,26),(27,5,7,18),(50,17,2,16),(42,15,10,17),(25,20,3,12),(43,5,10,7),(38,11,6,27),(7,19,3,11),(44,12,1,18),(37,7,5,12),(15,15,9,18),(17,7,4,8),(35,8,1,23),(57,11,6,28),(13,8,7,30),(26,1,4,5),(17,20,10,19),(25,6,7,23),(28,11,7,22),(59,20,1,16),(35,1,10,28),(34,7,4,25),(18,12,10,8),(14,17,4,20),(29,9,10,14),(13,16,7,21),(20,15,4,24),(33,2,5,13),(24,8,7,6),(37,16,4,20),(43,12,10,20),(12,19,10,18),(20,8,5,10),(7,5,9,14),(15,7,3,15),(17,11,4,27),(14,15,9,20),(48,13,2,19),(8,3,4,9),(32,19,9,19),(38,12,9,23),(55,5,2,5),(11,7,7,9),(22,2,3,11),(37,6,1,16),(43,9,6,15),(51,18,3,19),(37,16,5,17),(8,4,5,9),(39,1,5,15),(14,17,6,24),(54,11,6,10),(53,12,4,17),(57,10,6,27),(51,10,2,28),(16,2,6,9),(34,16,6,22);
/*!40000 ALTER TABLE `tcexectime` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `testcase`
--

DROP TABLE IF EXISTS `testcase`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `testcase` (
  `tc_id` varchar(10) NOT NULL,
  `tc_name` varchar(100) DEFAULT NULL,
  `tc_desc` varchar(500) DEFAULT NULL,
  `tc_prerequisite` varchar(500) DEFAULT NULL,
  `tc_setup` varchar(500) DEFAULT NULL,
  `tc_steps` varchar(500) DEFAULT NULL,
  `tc_expectedresults` varchar(500) DEFAULT NULL,
  `tc_sampletestdata` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`tc_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `testcase`
--

LOCK TABLES `testcase` WRITE;
/*!40000 ALTER TABLE `testcase` DISABLE KEYS */;
INSERT INTO `testcase` VALUES ('TC1',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC10',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC100',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC101',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC102',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC103',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC104',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC105',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC106',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC107',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC108',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC109',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC11',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC110',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC111',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC112',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC113',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC114',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC115',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC116',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC117',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC118',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC119',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC12',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC120',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC121',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC122',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC123',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC124',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC125',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC126',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC127',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC128',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC129',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC13',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC130',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC131',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC132',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC133',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC134',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC135',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC136',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC137',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC138',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC139',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC14',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC140',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC141',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC142',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC143',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC144',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC145',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC146',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC147',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC148',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC149',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC15',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC150',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC151',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC152',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC153',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC154',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC155',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC156',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC157',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC158',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC159',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC16',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC160',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC161',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC162',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC163',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC164',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC165',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC166',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC167',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC168',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC169',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC17',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC170',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC171',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC172',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC173',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC174',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC175',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC176',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC177',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC178',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC179',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC18',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC180',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC181',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC182',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC183',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC184',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC185',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC186',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC187',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC188',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC189',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC19',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC190',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC191',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC192',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC193',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC194',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC195',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC196',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC197',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC198',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC199',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC2',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC20',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC200',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC201',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC202',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC203',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC204',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC205',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC206',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC207',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC208',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC209',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC21',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC210',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC211',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC212',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC213',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC214',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC215',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC216',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC217',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC218',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC219',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC22',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC220',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC221',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC222',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC223',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC224',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC225',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC226',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC227',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC228',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC229',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC23',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC230',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC231',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC232',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC233',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC234',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC235',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC236',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC237',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC238',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC239',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC24',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC240',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC241',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC242',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC243',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC244',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC245',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC246',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC247',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC248',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC249',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC25',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC250',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC251',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC252',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC253',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC254',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC255',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC256',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC257',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC258',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC259',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC26',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC260',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC261',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC262',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC263',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC264',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC265',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC266',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC267',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC268',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC269',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC27',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC270',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC271',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC272',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC273',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC274',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC275',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC276',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC277',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC278',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC279',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC28',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC280',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC281',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC282',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC283',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC284',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC285',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC286',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC287',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC288',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC289',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC29',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC290',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC291',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC292',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC293',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC294',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC295',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC296',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC297',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC298',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC299',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC3',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC30',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC300',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC301',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC302',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC303',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC304',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC305',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC306',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC307',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC308',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC309',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC31',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC310',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC311',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC312',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC313',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC314',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC315',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC316',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC317',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC318',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC319',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC32',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC320',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC321',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC322',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC323',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC324',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC325',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC326',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC327',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC328',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC329',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC33',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC330',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC331',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC332',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC333',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC334',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC335',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC336',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC337',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC338',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC339',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC34',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC340',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC341',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC342',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC343',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC344',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC345',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC346',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC347',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC348',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC349',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC35',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC350',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC351',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC352',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC353',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC354',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC355',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC356',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC357',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC358',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC359',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC36',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC360',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC361',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC362',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC363',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC364',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC365',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC366',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC367',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC368',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC369',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC37',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC370',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC371',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC372',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC373',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC374',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC375',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC376',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC377',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC378',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC379',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC38',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC380',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC381',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC382',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC383',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC384',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC385',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC386',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC387',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC388',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC389',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC39',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC390',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC391',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC392',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC393',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC394',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC395',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC396',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC397',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC398',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC399',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC4',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC40',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC400',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC401',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC402',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC403',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC404',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC405',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC406',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC407',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC408',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC409',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC41',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC410',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC411',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC412',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC413',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC414',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC415',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC416',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC417',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC418',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC419',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC42',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC420',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC421',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC422',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC423',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC424',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC425',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC426',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC427',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC428',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC429',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC43',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC430',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC431',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC432',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC433',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC434',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC435',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC436',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC437',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC438',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC439',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC44',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC440',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC441',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC442',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC443',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC444',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC445',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC446',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC447',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC448',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC449',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC45',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC450',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC451',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC452',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC453',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC454',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC455',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC456',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC457',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC458',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC459',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC46',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC460',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC461',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC462',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC463',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC464',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC465',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC466',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC467',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC468',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC469',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC47',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC470',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC471',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC472',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC473',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC474',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC475',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC476',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC477',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC478',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC479',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC48',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC480',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC481',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC482',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC483',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC484',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC485',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC486',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC487',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC488',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC489',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC49',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC490',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC491',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC492',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC493',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC494',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC495',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC496',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC497',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC498',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC499',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC5',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC50',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC500',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC501',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC502',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC503',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC504',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC505',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC506',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC507',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC508',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC509',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC51',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC510',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC511',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC512',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC513',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC514',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC515',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC516',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC517',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC518',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC519',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC52',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC520',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC521',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC522',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC523',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC524',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC525',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC526',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC527',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC528',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC529',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC53',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC530',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC531',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC532',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC533',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC534',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC535',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC536',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC537',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC538',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC539',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC54',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC540',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC541',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC542',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC543',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC544',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC545',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC546',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC547',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC548',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC549',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC55',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC550',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC551',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC552',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC553',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC554',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC555',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC556',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC557',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC558',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC559',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC56',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC560',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC561',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC562',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC563',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC564',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC565',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC566',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC567',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC568',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC569',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC57',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC570',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC571',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC572',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC573',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC574',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC575',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC576',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC577',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC578',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC579',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC58',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC580',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC581',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC582',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC583',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC584',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC585',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC586',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC587',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC588',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC589',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC59',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC590',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC591',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC592',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC593',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC594',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC595',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC596',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC597',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC598',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC599',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC6',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC60',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC600',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC61',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC62',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC63',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC64',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC65',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC66',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC67',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC68',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC69',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC7',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC70',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC71',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC72',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC73',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC74',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC75',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC76',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC77',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC78',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC79',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC8',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC80',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC81',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC82',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC83',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC84',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC85',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC86',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC87',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC88',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC89',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC9',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC90',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC91',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC92',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC93',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC94',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC95',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC96',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC97',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC98',NULL,NULL,NULL,NULL,NULL,NULL,NULL),('TC99',NULL,NULL,NULL,NULL,NULL,NULL,NULL);
/*!40000 ALTER TABLE `testcase` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `userstory`
--

DROP TABLE IF EXISTS `userstory`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `userstory` (
  `us_id` varchar(10) NOT NULL,
  `us_desc` varchar(500) DEFAULT NULL,
  `project_id` varchar(10) NOT NULL,
  PRIMARY KEY (`us_id`,`project_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `userstory`
--

LOCK TABLES `userstory` WRITE;
/*!40000 ALTER TABLE `userstory` DISABLE KEYS */;
INSERT INTO `userstory` VALUES ('1','See https://github.com/spring-projects/spring-xd/issues/1924','1'),('10','h2. Narrative As an XD developer, I need to be able to create a composed job module as XML from the DSL an store it in the Module File repository.  While the user uses the composed job as if it is a normal job including seeing only the DSL.  In the back...','1'),('100','With the implementation of XD-1864, we need to make sure that the (paginated) data returned from the REST endpoints has proper default ordering.  Up to now we have done client-side ordering in the Admin UI, but with server-side pagination, the server-si...','1'),('101','*XD 1.0.2 Release + PHD 2.1 Upgrade - Action Items:*  * Update to SHDP 2.0.3 * Add Hadoop 2.5 (hadoop25) * Change PHD 2.x from phd20 to phd21 * Test PHD 2.0 with phd21  * Document that both PHD 2.1 and PHD 2.0 is supported with phd21  ','1'),('102','[Current Behavior] Currently XD-EC2 downloads an XD zip file from the location specified by the xd-dist-url after verifying that the file is accessible..   ','1'),('103',' We noticed that  when there is a problem with one of the deployed streams the container logs have too many stack trace messages and quickly fill up the disk.   For instance, there are several streams deployed writing to hdfs and if hdfs is restarted fo...','1'),('104','h1. Run Acceptance tests on the following  deployments.    h2. Slow Network Simulate slow network by deploying a XD cluster where the ZK Ensemble is only available via WAN.    h2. Network packet loss Simulate cases where a network packets can be lost.   ','1'),('105','h1. Summary  User wants the ability to deploy an ec2 cluster where the admin & containers use a pre existing ZK ensemble, Rabbit and redis instance that are deployed on different machines.   h2. Current functionality Currently spring-xd-ec2 sets up its ...','1'),('106','Tests that use verifySendCounts to validate whether data was sent to all the modules in a stream occasionally fail.  This is because, sometimes it takes 2 or more sends to get the data transmitted between modules.  With the current test structure this i...','1'),('107','Update  to replace deprecated code.','1'),('108','Have to update the code because of deprecation and to get ready for 2.0.','1'),('109','I have not tested this on M7 but I believe it is the case with latest release as well.  Stream definition 1: stream create logIngestion --definition rabbit --queues=demo --host=<rabbitmq-broker> | script --location=linemerge.groovy | hdfs --rollover=1...','1'),('11','Migrate load-generator and throughput to SCS.  ','1'),('110','I have a stream that watch output of multi file in a directory, process data and put it to HDFS. Here is my stream creat command:  stream create --name fileHdfs --definition file --dir=/var/log/supervisor/ --pattern=tracker.out-*.log --outputType=text...','1'),('111','I have a stream that watch output of multi file in a directory, process data and put it to HDFS. Here is my stream creat command:  stream create --name fileHdfs --definition file --dir=/var/log/supervisor/ --pattern=tracker.out-*.log --outputType=text...','1'),('112','* Update XD-EC2 configs to Pull from 1.0.1 Repo * Update XD-EC2 Configs to use spring-xd-1.0.1.BUILD-SNAPSHOT dir  * Update test configs XD_HOME to spring-xd-1.0.1.BUILD-SNAPSHOT instead of spring-xd-1.0.0.BUILD-SNAPSHOT','1'),('113','In cases where the deployment requires jars that can not be included with the distribution, the user should be able to pull a jar from a http site and place it in lib/xd.    The use case is that when we removed the mysql jar from the distribution, the C...','1'),('114','e.g.,   ^C09:42:00,882 ERROR localhost-startStop-2 loader.WebappClassLoader - The web application [] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak.  Th...','1'),('115','A possible approach is to set a configurable wait period when the first container arrives. If another container arrives during the wait period, reset the clock. When the wait period expires, start deploying modules. ','1'),('116','Previously, the scripts all looked for the logging configuration in $XD_HOME/config (or %XD_HOME%/config). This caused issues because it meant that if you moved all of the configuration and overrode $XD_CONFIG_LOCATION (or %XD_CONFIG_LOCATION%), the log...','1'),('117','This is a generalization of XD-1702','1'),('118','Spring XD should support mandatory module properties. In the UI when creating a definition from an existing Module, mandatory definition properties should be visually highlighted and enforced.  I don\'t think the XD backend supports this though. ','1'),('119','Theoretically I would have liked to centralize logging of Http/Resource calls global more substantially - but see this limitation:  https://github.com/angular/angular.js/issues/4013','1'),('12','See http://stackoverflow.com/questions/32525290/spring-xd-processor-module-classloader-issue-classnotfoundexception','1'),('120','Create Acceptance Test Add Mongo to Ec2 Acceptance Test Environment.','1'),('121','* Automatically close notification messages * Polish UI','1'),('122','Using a singleXD VM  I can create multiple streams with the same http port.    Stream Name  Stream Definition  Status   -----------  -----------------  ------  xd:>stream create --definition http --port=8081|file --dir=/tmp/test3 --name test1 --depl...','1'),('123','The TwitterSearch does a case insensitive search.  Tests need to do a insensitive check for the keywords in the search result.','1'),('124','It would be neat if streams could be easily formatted. E.g:  * Make the definition name bold * use different colors for parameter names and values  ','1'),('125','Update StreamUtils based on Code Review comments.','1'),('126','Also check the JMX output to see that the filter rejected the entry.','1'),('127','Deploy XD Sample Gemfire on Utility Machine. Deploy stream with gemfire as a source. Create a stream (stream2) with gemfire-server as a sink Send data to stream 2 and verify that the data has been received by gemfire source. Update CI tests to increase ...','1'),('128','This is currently in the M6 pom:    <organization>     <name>SpringSource</name>     <url>http://springsource.org</url>   </organization> ','1'),('129','Modify the PluginContextExtensionsInitializer to consume .groovy bean definitions as well as XML. ','1'),('13','See http://stackoverflow.com/questions/32525290/spring-xd-processor-module-classloader-issue-classnotfoundexception','1'),('130','In this case we will use environment variables to set the JDBC sink settings.  Thus we will just remove code.','1'),('131','After creating a composed module, I am unable to delete it.  [Steps to reproduce] xd:>module compose doo --definition filter --expression=payload.contains(\'doo\') | file Successfully created module \'doo\' with type sink xd:>module  module compose    m...','1'),('132','When trying to create the stream for the gemfire example: stream create hashtags --definition tap:stream:tweets  > transform --script=tweetSummary.groovy | gemfire-server --keyExpression=payload[\'id\'] --deploy  The shell displays:  Command failed or...','1'),('133','Currently uses m5 dependency. ','1'),('134','1. Get listing of job modules 2. Remove version and action column 3. Text to say creating definitions from available modules in the UI is forthcoming, link to https://github.com/spring-projects/spring-xd/wiki/Batch-Jobs#creating-a-job for how to do this...','1'),('135','I was in the process of rewriting transform using profiles (see ExpressionOrScriptMixin).  This broke eg ModuleCommandTests.testComposedModulesValuesInDefinition because basically composed module options activate no profile.  The problem is that there i...','1'),('136','The documentation lists the gemfire-server sink module\'s attributes to be \'gemfireHost\' and \'gemfirePort\'.  In the module/code they are \'host\' and \'port\'.  The other attributes are correct.  ','1'),('137','I am trying to use HDFS as sink while creating streams and I am encountering the following error :  Please refer attached document : Exception - localhost - 8020.txt   The fs.default.name set in hadoop.properties is : fs.default.name=hdfs://localhost:80...','1'),('138','Currently, the job notification channels are direct channels. We need to make these pub/sub channels.  With XD-885 (allowing automatic job listeners registration),  this would allow us to create named channel syntax like:  topic:job:myjobname-jobExecuti...','1'),('139','Job restart fails with NPE. See PR for XD-1090:  https://github.com/spring-projects/spring-xd/pull/572 ','1'),('14','Create Parent pom file for build Create .settings file Migrate Timestamp task from SCSM to SCTM. ','1'),('140','Create a better UI instead of Boot\'s default Whitelabel Error Page','1'),('141','Batch jobs should use application.yml provided connection as default. They now have their own configuration in batch-jdbc.properties. This config needs to account for any changes made to application.yml settings so the data is written to the batch metad...','1'),('142','Spring Boot support port scanning if you set server.port=0 (and disable with -1), so we could make that the default for the container node.','1'),('143','(apologies if a ticket already exists for this, but I didn\'t see one)  I spun up the Hortonworks Data Platform 2.0 sandbox, but see it isn\'t supported by Spring XD yet.  How hard would it be to add these Distro\'s in?  Is it just a matter of dropping in ...','1'),('144','Make sure the sinks and jobs work against Pivotal HD 1.1','1'),('145','We currently include jetty-util-6.1.26.jar but we need to add correct jar for different distributions - PHD uses jetty-util-7.6.10.v20130312.jar  Need to check hadoop-hdfs dependencies for the distros and add jetty-util-* to the jar copy for each distro ','1'),('146','Spring batch workflows are great for complex hadoop operations but if I want to create a simple processor that executes some hadoop fs in groovy, it would be nice to do this:  {code} <service-activator output-channel=output input-channel=input> ...','1'),('147','Add serialVersionUID to the objects in package org.springframework.integration.x.twitter:  * XDEntities * XDUrlEntity * XDHashTagEntity * XDMentionEntity * XDMediaEntity * XDTickerSymbolEntity * XDTweet  The absence creates warnings during compile time.','1'),('148','Looks like there are some version mismatch issues with the build/packaging of the XD components. Looking in xd/lib I see the following which looks suspicious:  mqtt-client-0.2.1.jar mqtt-client-1.0.jar  jackson-core-asl-1.9.13.jar jackson-mapper-asl-1.9...','1'),('149','We should adjust our --hadoopDistro options to the ones supported in the new spring-data-hadoop 1.0.1.RELEASE - hadoop12 (default), cdh4, hdp13, phd1, hadoop20  This includes updating the wiki pages','1'),('15','Deploying a Stream with HDFS sink and JDBC as source displays incorrect information on the tooltip for the JDBC source. The issue occurs when there are more than 1 containers deployed and the source is deployed on one container and the sink is deployed ...','1'),('150','This might mean we should adjust our hadoopDistro options to the ones supported in the new release - hadoop12 (default), cdh4, hdp13, phd1 and hadoop21','1'),('151','Jobs will be started via trigger.  So we won\'t need the JobTriggerBean.','1'),('152','Add CONTRIBUTING.md file, use the Spring Integration file as the basis.','1'),('153','Looking at the latest Sonar run we have 3 package tangles in Spring XD:  https://sonar.springsource.org/drilldown/measures/7717?metric=87','1'),('154','Running on Cloud Foundry (and other managed environments) we need to be able to specify a Redis password in addition to host and port.','1'),('155','Add back classifier = \'dist\' to distZip build target - it was was accidentally removed.','1'),('156','Factor out common Redis/Rabbit {{ChannelRegistry}} code.  Also, factor out common inbound/tap code (very similar).  Change transport nternals to Use AbstractTransformer instead of {{ARPMH}} and {{BridgeHandler}}.','1'),('157','CI job will run integration tests that are tagged for CI build.','1'),('158','Since most of the xd.shell.itests will do more then one thing (deploy a stream, start it, add a tap, add a job, stop, etc) we decided to decouple writing testcases with running it. Test cases will be written in spring-shell scriptlets. Scriptlets are js...','1'),('159','Add top level utility methods to manage XD runtime (deploy, start and stop). These methods will be used by underlying integration tests to control runtime test environment.  ','1'),('16','User wants to restart a failed Job via the CLI.    i.e. task relaunch job-instance id','1'),('160','Need to capture exceptions from the various projects that make up XD and wrap them in XD Specific exceptions.  An example of this is when leaving out the channels in the module definitions, we see NoSuchBeanExceptions and IllegalArgumentExceptions throw...','1'),('161','Examples: 1. Be able to start the rabbitmq source just by pointing to modules/source/rabbit.xml, pass in some property file for parameters to be replaced, and outgoing message is placed in a in-memory queue backed channel for use with assertions to veri...','1'),('162','Handled by 1245','1'),('163','Be able to point to the processor xml file, e.g. modules/processors/transformer.xml, and have access to a source channel that drives messages into the processor and a output channel where output messages are send.  The outbound channel is queue backed. ...','1'),('164','So that we can validate the message content in the stream','1'),('165','To send a pre-set message to process(es)','1'),('166','h2. Narrative As XD, I need a persistent way to register job definitions (beyond the map registry implementation provided by Spring Batch).    h2.  Acceptance Criteria # XD should be able to register, unregister, and find job definitions via the registr...','1'),('167','h2. Narrative As an XD developer, I need to be able to use a batch job to stream data as a source.  h2.  Acceptance Criteria # Implement the ability for a job to be defined as a source in the DSL # Add the configurations for the batch infrastructure tra...','1'),('168','h2. Narrative As a user of XD, I want to be able to use a job as a source.  To do so, we need the output of a job to be written to a message channel  h2.  Acceptance Criteria # Create a new ItemWriter in the Spring Batch project to write to a Spring Int...','1'),('169','h2. Narrative As a developer, I need a way to deploy job configurations as well as the related custom code to XD.  h2.  Acceptance Criteria # Provide the ability to register jobs that have been deployed as modules via something like {{curl -d job ht...','1'),('17','User should be able to execute a task cancel <task name>.  Which will terminate a running task.  And set the state of the task to cancelled.  ','1'),('170','An aggregate counter rolls up counts into discrete time buckets.  There is an existing POC implementation in Java based off the library https://github.com/thheller/timed-counter   The README there has a good description of the desired feature set.','1'),('18','Need infrastructure to capture the state from the environment (lattice, local) running the task.   Task Launcher needs ability to map the task state as it is reported from the cloud environment (lattice, local) to the enumerated state as specified [#her...','1'),('19','SCD Admin will have connection information for a task and job repository.  This information will need to be transferred to the Task Launcher.  The scope is to study the following options: * Would the default place for configurations be in the YAML file?...','1'),('2','Spring XD Ambari plugin only supports HDB as job db. HDB is not good in production environment. It will be great if we can specify RDB in spring xd installation/config process.  ','1'),('20','Create a timestamp job that will be used a a sample for users to create their own spring boot based jobs.   ','1'),('21','h2. Narrative As a user, I need to be able to deploy a task (boot jar) via the CLI.  h2.  Back story Since the concept of jobs as an explicit primitive within Spring XD is going away in spring-cloud-data, the shell needs to be updated to reflect that.','1'),('22','Build SCS and SCD projects upon change in github repo. Push docker image for SCD-Admin to docker hub','1'),('23','Currently the DSL parsing for tasks is a copy and paste of what it is for streams (minus the ability to parse multiple modules).  This results in a lot of duplication.  This should be refactored to remove duplication and remove explicit references to ei...','1'),('24','Enable spring cloud config for all modules  * Add spring cloud config client to pom dependencies.  * Add bootstrap.yml to scs project ','1'),('25','User can configure spring cloud data via  via Spring Cloud Config, data-admin.yml or Spring Cloud Connector * Add bootstrap.yml to spring cloud data * create a default data-admin.yml and configure spring data to look for this vs application.yml. * Sprin...','1'),('26','Currently Admin & Container only support latest, 1.0.x and 1.1.0 while singlenode only has tags for 1.0.x and latest.    We need to have a tags for 1.1.0, 1.2.0, 1.2.1 for all XD Docker images.  ','1'),('27','Currently Admin & Container only support latest, 1.0.x and 1.1.0 while singlenode only has tags for 1.0.x and latest.    We need to have a tags for 1.1.0, 1.2.0, 1.2.1 for all XD Docker images.  ','1'),('28','HdfsOutboundChannelAdapterParser supports having a request-handler-advice-chain but it\'s not available via XML since the XSD for hdfs-outbound-channel-adapter doesn\'t have a  xsd:complexContent tag.','1'),('29','Occasionally 2 acceptance tests are running simultaneously and the filepollhdfs tests writes their data to the same hdfs directory.  This will cause the test to fail sporadically.  By creating a unique directory each time we can share the hadoop instanc...','1'),('3','XD spring deployment capabilities are supported by the active/standby?  example: module.log.criteria=groups.contains(\'group1\')  Above example is random selection? ','1'),('30','Add Pagination to Containers Page','1'),('31','The XML REST endpoints:  * are not working correctly * interfere with security * are not used   ','1'),('32','This deprecated in SI 4.2.  Use   {{this.evaluationContext = ExpressionUtils.createStandardEvaluationContext(getBeanFactory());}}  in {{afterPropertiesSet()}} instead.  Not that this can safely be done in 1.2.x - the preferred mechanism is available in ...','1'),('33','https://github.com/spring-projects/spring-xd/blob/master/modules/common/gemfire-connection.groovy#L8 is syntactically incorrect. It looks like the intention was to pass this a property, but it appears it is treated as a literal value which Groovy coerce...','1'),('34','Even for relatively large resolutions, e.g. 1024px the graph breaks the browser window. We should ensure that the graphs work on smaller screens.','1'),('35','Depends on INT-3727','1'),('36','Kafka deployments take nearly 4 times as long as other transports because of the creation of the topic an partitions.  Currently all test use the same wait time whether it is for waiting for connections or file writes.   So to get a CI build for kafka b...','1'),('37','Need acceptance tests to run on the 1.2.X branch.  Needs to be setup as a child of the Publish 1.2.x','1'),('38','h2. Narrative As a developer, I want to be able to construct jobs using a DSL similar to the current syntax for streams.  h2.  Back story Streams currently provide a DSL for assembling modules into flows (streams) that consist of a source, n processors,...','1'),('39','h2. Narrative As a developer, when using jdbchdfs\'s incremental imports, I need to be notified that something went wrong in a previous run of the jdbchdfs job so that I can take the appropriate actions based on the data previously imported.  h2.  Back s...','1'),('4','Need to add the following instructions to setup the configurations for the Batch Repo to Composed Job Docs to support parallel jobs: 1) uncomment and change the following from  : ```spring:   batch: # Configure other Spring Batch repository values.  Mos...','1'),('40','As a developer, I would like to be able to configure which exceptions thrown by a module should be retryable within the {{RabbitMessageBus}}.  As usual, these should be configurable at the bus and/or stream deployment property level.  Also consider disa...','1'),('41','This addresses The plugin issue https://www.jfrog.com/jira/browse/GAP-172 to disable spring-xd/pom.xml','1'),('42','As a developer, I\'d like to rerun _baseline_, _Tuple_, and _Serialized_ payloads, so I can compare the differences in performance between 0.8.1 and 0.8.2 Kafka releases.   Sinks to be included in test: In-Memory Transport > Hdfs sink Direct Binding Tran...','1'),('43','If you have a an option *--mode=textLine*, presently the enum MUST be named *textLine*.  I think it would improve the user-experience if we allowed users to pass in values such as:  * --mode=textLine * --mode=text_line * --mode=TEXT_LINE  ','1'),('44','Provide an option --delete=true on the File Source  If the file reading is not *ref*, an option *--delete=true* will remove the file once it was read.  ','1'),('45','This is a source module for video ingestion: the modules captures video frames from a camera or from a video file. For camera, the frames are grabbed from the rtsp video stream. This module will generate message with the frame image (encoded with JPEG) ...','1'),('46','See: http://docs.spring.io/spring-xd/docs/current-SNAPSHOT/reference/html/#_introduction_26  There should be chapter/section title before this.','1'),('47','See:   https://sonar43.spring.io/drilldown/measures/7173?metric=package_tangle_index','1'),('48','For example, how to specify the partition count for topics that are created by the message bus.','1'),('49','This tests should prove that Kafka can handle a module count greater than one with the proper concurrency settings. load-generator should be used as the foundation for this test with the following settings: module.load-generator.count=10,module.throughp...','1'),('5','In my test case, I have security enabled. I tested this on distributed mode. I have a few Streams deployed. * Started 3 XD containers.  * Issue *Shutdown* from UI * The containers don\'t show up on the UI any more * jps lists the process id of 2 Containe...','1'),('50','This tests should prove that Kafka can handle a module count greater than one with the proper concurrency settings. load-generator should be used as the foundation for this test with the following settings: module.load-generator.count=10,module.throughp...','1'),('51','With message rates enabled and container management enabled, if you deploy a streaming module, the container page may be blank.  Because the streaming module builds the channels outside the spring context (spark receiver is ran in the spark cluster not ...','1'),('52','In XD today we use  commons-logging or slf4j  APIs bound to log4j at runtime (configured with log4j.properties).    Boot uses slf4j APIs backed by logback. This causes some build incompatibilities building a component that depends on spring-xd-dirt and ...','1'),('53','When using the rest interface to create a Job with an empty description, used to generate the following exception, Definition can not be empty.   Now generates XD112E:(pos 0): Unexpectedly ran out of input^.  The correct error should be, defin...','1'),('54','When copying those xml files to spring xd conf, spring xd doesn\'t pickup those classpath correctly. those classpath contains ${stack.name}, ${stack.version}. Those were processed correctly inside phd3/hdp, but not in spring xd. ','1'),('55','After the Introduction to XD-2861 the acquisition of JobResources takes more time.  We have to introduce a pause to wait for getJobDefinitionResource to be populated. ','1'),('56','Last Sync Errors: Invalid POM: /org/springframework/xd/spring-xd-module-parent/1.1.1.RELEASE/spring-xd-module-parent-1.1.1.RELEASE.pom: Developer information missing Invalid POM: /org/springframework/xd/spring-xd-module-plugin/1.1.1.RELEASE/spring-xd-mo...','1'),('57','I had a custom module with a typo: base_packages=base_packages=com.acme.config  The module deploys without error but the stream hangs since the channels, etc. are not found in the stream plugin. Very hard to debug. ','1'),('58','This keeps coming up as an issue that prevents us from publishing to maven central.','1'),('59','A placeholder to investigate what can be done with Spring configuration in Module Options Metadata classes to simplify/enhance property configuration.  With @Configuration modules, these may now be beans in the module context. ','1'),('6','When the following format is specified  - {noformat}  home: file://hadoop/xd/custom-modules {noformat} There is no root-path (\'/\') following the \'file://\' scheme. That makes the Hadoop job launcher interpret what follows as a host name and will look for...','1'),('60','This apparently is not tested or used internally, but I expect it to fail having tried a similar approach to derive the class of a generic type in a different situation. This method does not always work due to type erasure http://stackoverflow.com/quest...','1'),('61','Currently when modules are composed to a single application context, properties are not inherited.  https://github.com/spring-projects/spring-xd/wiki/Modules#placeholders-available-to-all-modules  ','1'),('62','./gradlew install fails for spring-xd-extension-batch and spring-xd-extension-reactor. The first case is a simple update to gradle/build-extensions.gradle. The 2nd causes several compilation errors that are not trivial for a Reactor noob.  ','1'),('63','If automatic binding of dead letter is enabled for rabbit mq and taps are deployed, anytime the tap is undeployed, the dead letter for that tap still remains.  The tap uses a unique name and the queue for that is automatically deleted, but the dead lett...','1'),('64','Currently it is necessary to specify mappedRequestHeaders=*  on the rabbit sink, otherwise no headers are mapped to AMQP.  This should be the default behavior.','1'),('65','Some modules inherit {{application.yml}} / {{servers.yml}} via a properties file in {{/config/modules}} ; others have the values defined in the {{...OptionsMetadata}} classes.  Switch all modules to use the latter technique for consistency.','1'),('66','Currently PojoCodec calls kryo.register(Class<?> type) on every ser/deser invocation. This fails with 1.1 because instances are pooled and a different instance may be used to serialize and deserialize.  See https://github.com/EsotericSoftware/kryo#regis...','1'),('67','The configuration for the redis sink must be provided for explicitly instead of falling back to values defined in servers.yml.  The default behavior configuration should be address in a manner consistent with the default behavior of module config for ra...','1'),('68','The partitionResultsTimeout is set to 300000 as default (5min). This is way to short for long running steps. We should increase this default.','1'),('69','{code} logger.error(Failed to deliver message; retries exhausted; message sent to queue \'ERRORS:name\',          context.getLastThrowable()); {code}  Should be:  {code} logger.error(Failed to deliver message; retries exhausted; message sent to queu...','1'),('7','XD Developer does not want the the twitter stream acceptance tests to interfere with other tests.','1'),('70','We need the ability to have bamboo provision a Windows instance on EC2 and launch a XD build.   Capture the results of the XD Build and report back to Bamboo Success or failure. If the build is successful, shutdown the EC2 Windows instance.  Else leave ...','1'),('71','The XD on YARN section of the docs needs to be updated with the xd-yarn admininfo command for detecting the ports used by admin servers.','1'),('72','If a stream foo has messages in its queue when it is destroyed and another stream named foo is created of similar structure those messages will be delivered to sink.  This is seen when twitterstream runs prior to hdfssink test.  The twitters stream data...','1'),('73','Hey Guys,  Im trying to run WordCount example in kerberized cluster with the attached job configuration. The job upload the test file to the HDFS without problems but it fails in wordcount step. I am running the example on singlenode and  I configured t...','1'),('74','In order to run Acceptance tests in their current state there had to be * changes to the code  ** Set the location of the data node for the hdfs tests. (because the data nodes were no located with the master.) ** disable the copying of batch basic becau...','1'),('75','Multiple threads invoke the shell processor result in I/O errors and/or data corruption. send() and receive() should be synchronized. ','1'),('76','In cases where I re-run a job, and during the job execution the percentage complete will tally the total runtime of the current execution and all previous executions. See the attached image.','1'),('77','Currently any properties files located in the ${xd.config.home}/ directory are not included in the config directory provided by the yarn deployment. And thus modules are pulling props from the  spring-xd-yarn-1.1.0.BUILD-SNAPSHOT.zip file.   We need to ...','1'),('78','Create an 2.6 Yarn Environment on EC2 for which XD can be deployed for acceptance tests.','1'),('79','Expecting <module-name> in module configuration is brittle, especially in conjunction with module upload command which permits the module to be registered under a different name.  The convention should be dropped in favor of any file name. This requires...','1'),('8','Currently, if a module in a stream throws an exception, the stream flow is broken, but the stream\'s creator is not notified or warned about the issue, unless a direct monitoring of the logs is performed.  This could work when an administrator is taking ...','1'),('80','Create a Sink that can capture the results of the messages sent and log the number of messages received per a configured interval in seconds.','1'),('81','Create a load-generator source module that  will generate messages and dispatch messages to a XD stream.    ','1'),('82','As a QA, I\'d like to include acceptance test coverage for hdfs-dataset module so that I can validate the functionality as part of every CI build.','1'),('83','The EXAMPLE in the documentation (and the paragraph preceding the example) for the script processor uses both location and properties-location options, but these are in actuality script and locationProperties according to module in...','1'),('84','Replace the current paravirtual AMI used for CI tests needed to be replaced with a HVM based AMI Paravirtual is being phased out by Amazon.  Also so we can utilize VPC and placement groups in the future. ','1'),('85','The reference states the following:  The JDBC driver jars for the HSQLDB, MySql, and Postgres are already on the XD classpath  It looks like this is true for Postgres and HSQLDB, but I can\'t see a driver for MySQL shipped with the distribution.','1'),('86','In order to identify potential problems that may occur if XD is running for multiple hours we need to create a long duration test regime. Create an environment from which we can run both Singlenode and a simple cluster (1 Admin 2 container) for 24+ hour...','1'),('87','While there is a server endpoint to logout, we don\'t have that ability yet from the UI. As indicated by XD-2122 we will also need a meta-data REST endpoint  so we can interrogate whether security is enabled, whether the user is logged etc. So we can ful...','1'),('88','The acceptance tests cover the entire suite of script tests.  Thus they are no longer needed.  The only test that was remaining was posting 10 messages to a http source and writing to a long and making sure we didn\'t get an error.  This test (httpbash) ...','1'),('89','the meaning of the backtick has changed. The backtick now only does monospaced formatting, it does not escape the content. The migration guide walks you through the options:   http://asciidoctor.org/docs/migration/#migration-scenarios    For more de...','1'),('9','We do set a default value in: xd/lib/spring-xd-dirt-1.2.1.RELEASE.jar/application.yml  {code} ... xd:   data:     home: file:${XD_HOME}/data   config:     home: file:${XD_HOME}/config   module:     home: file:${XD_HOME}/modules   customModule:     home:...','1'),('90','Using single-node deployment of Spring XD 1.0 GA, we needed to redefine several batch jobs. We deleted the jobs (job destroy all). When attempting to re-add, we received an error that a job with the name already exists. Performing job list confi...','1'),('91','Looks like upgrade to Gradle 2.2 is not a simple version change, e.g. I see:   {code} FAILURE: Build failed with an exception.  * Where: Build file \'/Users/<USER>dev/git/spring-xd/build.gradle\' line: 219  * What went wrong: A problem occurred evaluating...','1'),('92','Create an AMI that will contain the Kafka Executable as well as the Kafka performance test tools.','1'),('93','Since Kafka and Rabbit have different strategies on how a message system is implemented, we will need to update the tests used on rabbit to work with Kafka.  While they will not be exactly the same as before, they should exercise the same principles. Th...','1'),('94','{{JobCommandTests}} in xd-shell only uses a {{LocalMessageBus}} so the problem in XD-2323 was not discovered until a manual integration test was executed.  At a minimum, {{JobCommandTests.testLaunchPartitionedJob()}} should be run with all bus implement...','1'),('95','Create a dedicated Scheduling Page for Jobs. Currently we create a form underneath the deployments table. That is a bit unwieldy when many deployed jobs are shown in the table.  Similar to XD-2320','1'),('96','Create a dedicated Launch Page for Jobs. Currently we create a launch form underneath the deployments table. That is a bit unwieldy when many deployed jobs are shown in the table.','1'),('97',' * https://docs.angularjs.org/guide/migration#migrating-from-1-2-to-1-3 * http://angularjs.blogspot.com/2014/10/ng-europe-angular-13-and-beyond.html * http://angularjs.blogspot.com/2014/10/angularjs-130-superluminal-nudge.html  ','1'),('98','This may be broken down into 2 issues. First of all we need to define the proper UI interaction for the CLI to deal with pagination and then of course the actual implementation.  ','1'),('99','Add pagination for:  http://localhost:9393/jobs/configurations  Related to XD-1864','1');
/*!40000 ALTER TABLE `userstory` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `userstoryvalue`
--

DROP TABLE IF EXISTS `userstoryvalue`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `userstoryvalue` (
  `us_points` int DEFAULT NULL,
  `us_businessvalue` int DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `userstoryvalue`
--

LOCK TABLES `userstoryvalue` WRITE;
/*!40000 ALTER TABLE `userstoryvalue` DISABLE KEYS */;
INSERT INTO `userstoryvalue` VALUES (8,0),(2,0),(1,0),(1,0),(2,0),(2,0),(3,0),(100,0),(2,0),(8,0),(5,0),(3,0),(3,0),(3,0),(1,0),(8,0),(8,0),(8,0),(5,0),(3,0),(5,0),(5,0),(8,0),(2,0),(5,0),(5,0),(5,0),(0,0),(3,0),(2,0),(3,0),(1,0),(1,0),(3,0),(2,0),(3,0),(3,0),(8,0),(2,0),(5,0),(1,0),(8,0),(3,0),(3,0),(8,0),(1,0),(5,0),(1,0),(3,0),(3,0),(3,0),(8,0),(2,0),(3,0),(5,0),(5,0),(2,0),(2,0),(3,0),(1,0),(2,0),(2,0),(3,0),(1,0),(3,0),(5,0),(1,0),(1,0),(1,0),(5,0),(1,0),(1,0),(3,0),(8,0),(1,0),(3,0),(2,0),(5,0),(3,0),(2,0),(5,0),(3,0),(1,0),(5,0),(0,0),(8,0),(5,0),(1,0),(3,0),(5,0),(3,0),(1,0),(2,0),(8,0),(4,0),(4,0),(4,0),(8,0),(2,0),(8,0),(3,0),(3,0),(0,0),(5,0),(8,0),(5,0),(4,0),(4,0),(8,0),(1,0),(1,0),(3,0),(5,0),(4,0),(8,0),(2,0),(6,0),(6,0),(4,0),(10,0),(3,0),(4,0),(3,0),(4,0),(3,0),(5,0),(8,0),(3,0),(3,0),(3,0),(3,0),(3,0),(2,0),(8,0),(5,0),(0,0),(5,0),(5,0),(0,0),(6,0),(5,0),(0,0),(1,0),(3,0),(3,0),(1,0),(2,0),(3,0),(5,0),(3,0),(1,0),(1,0),(4,0),(2,0),(1,0),(4,0),(1,0),(3,0),(2,0),(5,0),(8,0),(8,0),(8,0),(8,0),(8,0),(4,0),(10,0),(4,0),(8,0),(8,0);
/*!40000 ALTER TABLE `userstoryvalue` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2024-01-11 15:35:10
